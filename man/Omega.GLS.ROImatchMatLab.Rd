% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Omega.GLS.ROImatchMatLab.R
\name{Omega.GLS.ROImatchMatLab}
\alias{Omega.GLS.ROImatchMatLab}
\title{Weighing Matrix for ROI-GLS/skew (WREG)}
\usage{
Omega.GLS.ROImatchMatLab(alpha = 0.01, theta = 0.98, Independent, X, Y,
  RecordLengths, LP3, MSEGR = NA, TY = 2, Peak = T, X.all, LP3.all,
  DistMeth = 2, regSkew = FALSE)
}
\arguments{
\item{alpha}{A number, required only for \dQuote{GLS} and \dQuote{GLSskew}. 
\code{alpha} is a parameter used in the estimated cross-correlation between
site records.  See equation 20 in the WREG v. 1.05 manual.  The arbitrary,
default value is 0.01.  The user should fit a different value as needed.}

\item{theta}{A number, required only for \dQuote{GLS} and \dQuote{GLSskew}. 
\code{theta} is a parameter used in the estimated cross-correlation between
site records.  See equation 20 in the WREG v. 1.05 manual.  The arbitrary,
default value is 0.98.  The user should fit a different value as needed.}

\item{Independent}{A dataframe containing three variables: \code{StationID} is
the numerical identifier (without a leading zero) of each site, \code{Lat}
is the latitude of the site, in decimal degrees, and \code{Long} is the
longitude of the site, in decimal degrees.  The sites must be presented in
the same order as \code{Y}.  Required only for \dQuote{GLS} and
\dQuote{GLSskew}.  This includes only sites in the current region of
influence.}

\item{X}{The Independent variables in the regression, with any transformations
already applied.  Each row represents a site and each column represents a
particular independe variable.  (If a leading constant is used, it should be
included here as a leading column of ones.)  The rows must be in the same
order as the dependent variables in \code{Y}.  This includes only sites in
the current region of influence.}

\item{Y}{The dependent variable of interest, with any transformations already 
applied.  This includes only sites in the current region of influence.}

\item{RecordLengths}{This input is required for \dQuote{WLS}, \dQuote{GLS} and
\dQuote{GLSskew}.  For \dQuote{GLS} and \dQuote{GLSskew},
\code{RecordLengths} should be a matrix whose rows and columns are in the
same order as \code{Y}.  Each \code{(r,c)} element represents the length of
concurrent record between sites \code{r} and \code{c}.  The diagonal
elements therefore represent each site's full record length.  For
\dQuote{WLS}, the only the at-site record lengths are needed. In the case of
\dQuote{WLS}, \code{RecordLengths} can be a vector or the matrix described
for \dQuote{GLS} and \dQuote{GLSskew}.  This includes only sites in the 
current region of influence.}

\item{LP3}{A dataframe containing the fitted Log-Pearson Type III standard 
deviate, standard deviation and skew for each site.  The names of this data
frame are \code{S}, \code{K} and \code{G}.  For \dQuote{GLSskew}, the
regional skew value must also be provided in a variable called \code{GR}. 
The order of the rows must be the same as \code{Y}.  This includes only
sites in the current region of influence.}

\item{MSEGR}{A number. The mean squared error of the regional skew.  Required
only for \dQuote{GLSskew}.}

\item{TY}{A number.  The return period of the event being modeled.  Required
only for \dQuote{GLSskew}.  The default value is \code{2}.  (See the
\code{Legacy} details below.)}

\item{Peak}{A logical.  Indicates if the event being modeled is a Peak flow
event or a low-flow event.  \code{TRUE} indicates a Peak flow, while
\code{FALSE} indicates a low-flow event.}

\item{X.all}{The Independent variables for all sites in the network, with any 
transformations already applied.  Each row represents a site and each column
represents a particular independe variable.  (If a leading constant is used,
it should be included here as a leading column of ones.)}

\item{LP3.all}{A dataframe containing the fitted Log-Pearson Type III standard
deviate, standard deviation and skew for all sites in the network.  The
names of this data frame are \code{S}, \code{K} and \code{G}.  For
\dQuote{GLSskew}, the regional skew value must also be provided in a
variable called \code{GR}.  The order of the rows must be the same
\code{Y}.}

\item{DistMeth}{Required for \dQuote{GLS} and \dQuote{GLSskew}.  A value of
\code{1} indicates that the "Nautical Mile" approximation should be used to
calculate inter-site distances.  A value of \code{2} designates the
Haversine approximation.  See \code{\link{Dist.WREG}}.  The default value is
\code{2}.  (See the \code{Legacy} details below.)}

\item{regSkew}{A logical vector indicating if regional skews are provided with
an adjustment required for uncertainty therein (\code{TRUE}).  The default 
is \code{FALSE}.}
}
\value{
\code{Omega.GLS.ROImatchMatLab} returns a list with two elements: 
 \item{GSQ}{The estimated model error variance.} \item{Omega}{The estimated
 weighting matrix.}
}
\description{
\code{Omega.GLS.ROImatchMatLab} calculates the weighting function
for a generalized least-squares regression using regions-of-influence.  This
is largely legacy code to match WREG v. 1.05 idiosyncrasies.
}
\details{
This is a legacy function that matches the idiosyncrasies of WREG v.
 1.05. This includes using all sites to implement the sigma regression.
 
 See \code{\link{Omega.GLS}} for more information on the \dQuote{GLS} 
 weighting estimates.
 
 This function will become obsolete once all idiosyncrasies are assessed.
}
\examples{
# Import some example data
PeakFQdir <- paste0(
  file.path(system.file("exampleDirectory", package = "WREG"),
    "pfqImport"))
gisFilePath <- file.path(PeakFQdir, "pfqSiteInfo.txt")
importedData <- importPeakFQ(pfqPath = PeakFQdir, gisFile = gisFilePath)

# Organizing input data
lp3Data <- importedData$LP3f
lp3Data$K <- importedData$LP3k$AEP_0.5
Y <- importedData$Y$AEP_0.5
X <- importedData$X[c("Sand", "OutletElev", "Slope")]

#### Geographic Region-of-Influence
i <- 1 # Site of interest
n <- 10 # size of region of influence
Gdist <- vector(length=length(Y)) # Empty vector for geographic distances
for (j in 1:length(Y)) {
  if (i!=j) {
    #### Geographic distance
    Gdist[j] <- Dist.WREG(Lat1 = importedData$BasChars$Lat[i],
      Long1 = importedData$BasChars$Long[i],
      Lat2 = importedData$BasChars$Lat[j],
      Long2 = importedData$BasChars$Long[j]) # Intersite distance, miles
  } else {
    Gdist[j] <- Inf # To block self identification.
  }
}
temp <- sort.int(Gdist,index.return=TRUE)
NDX <- temp$ix[1:n] # Sites to use in this regression

# Pull out characeristics of the region.
Y.i <- Y[NDX] # Predictands from region of influence
X.i <- X[NDX,] # Predictors from region of influence
# Record lengths from region of influence
RecordLengths.i <- importedData$recLen[NDX,NDX] 
# Basin characteristics (IDs, Lat, Long) from region of influence.
BasinChars.i <- importedData$BasChars[NDX,] 
LP3.i <- data.frame(lp3Data)[NDX,] # LP3 parameters from region of influence

# Compute weighting matrix
weightingResult <- Omega.GLS.ROImatchMatLab(alpha = 0.01, theta = 0.98,
  Independent = importedData$BasChars, X = X.i, Y = Y.i,
 RecordLengths = RecordLengths.i, LP3 = LP3.i, TY = 20,
  X.all = X, LP3.all = lp3Data)

}
